openapi: 3.0.0
info:
  title: CarsCDK
  version: 1.0.0
x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true
  body-only:
    validateRequestBody: true
    validateRequestParameters: false
x-amazon-apigateway-request-validator: all
paths:
  /cars:
    get:
      tags:
        - Cars
      summary: List all registered cars
      description: List cars
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cars"
        "405":
          description: Invalid input
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cars-get-bohdan2/invocations
    post:
      x-amazon-apigateway-request-validator: body-only
      tags:
        - Cars
      summary: Register a new car
      description: Register a new car
      operationId: addPet
      requestBody:
        description: Create a new pet in the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Car"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Registration"
        "405":
          description: Invalid input
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cars-post-bohdan2/invocations

  /cars/{registrationId}:
    get:
      tags:
        - Cars
      summary: List a single car
      description: Get details of a car
      parameters:
        - name: registrationId
          in: path
          description: RegistrationID of the car to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cars"
        "405":
          description: Invalid input
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cars-licenseplate-get-bohdan2/invocations
    put:
      x-amazon-apigateway-request-validator: body-only
      tags:
        - Cars
      summary: Update a car
      description: Update a car
      requestBody:
        description: Update a pet
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Car"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Registration"
        "405":
          description: Invalid input
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cars-licenseplate-put-bohdan2/invocations
    delete:
      tags:
        - Cars
      summary: Delete a car
      description: Delete
      parameters:
        - name: registrationId
          in: path
          description: RegistrationID of the car to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cars"
        "405":
          description: Invalid input
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cars-licenseplate-delete-bohdan2/invocations

components:
  schemas:
    Cars:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Car"
          - $ref: "#/components/schemas/Registration"
    Car:
      type: object
      required:
        - brand
        - model
      properties:
        brand:
          type: string
          example: BMW
        model:
          type: string
          example: x7
        color:
          type: string
    Registration:
      type: object
      properties:
        registrationId:
          type: integer
          format: int64
          example: 10
        registrationDate:
          type: string
          format: date-time
