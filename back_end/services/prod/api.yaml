openapi: 3.0.0
info:
  title: GutToWorkCDK
  version: 1.0.0
x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true
  body-only:
    validateRequestBody: true
    validateRequestParameters: false
x-amazon-apigateway-request-validator: all
# Global CORS configuration
x-amazon-apigateway-cors:
  allowOrigins:
    - "*"
  allowHeaders:
    - Content-Type
    - X-Amz-Date
    - Authorization
    - X-Api-Key
    - X-Amz-Security-Token
  allowMethods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
paths:
  /feelings:
    get:
        tags:
          - Feelings
        summary: List all feeling records
        description: List feeling records
        responses:
          "200":
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/FeelingRecords"
          "405":
            description: Invalid input
          "404":
            description: No feeling records found
        x-amazon-apigateway-integration:
          type: aws_proxy
          httpMethod: POST
          uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:feelings-get/invocations
    post:
          x-amazon-apigateway-request-validator: body-only
          tags:
            - Feelings
          summary: Register a new Feeling record.
          description: Register a new feeling record after checking it doesn't already exist in the table
          requestBody:
            description: Create a new feeling record
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Feeling"
            required: false
          responses:
            "200":
              description: Successful operation
            "405":
              description: Invalid input
          x-amazon-apigateway-integration:
            type: aws_proxy
            httpMethod: POST
            uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:feelings-post/invocations
    options:
          summary: CORS support
          description: Enable CORS by returning the correct headers
          responses:
            "200":
              description: Default response for CORS method
              headers:
                Access-Control-Allow-Origin:
                  schema:
                    type: string
                Access-Control-Allow-Methods:
                  schema:
                    type: string
                Access-Control-Allow-Headers:
                  schema:
                    type: string
          x-amazon-apigateway-integration:
            type: mock
            requestTemplates:
              application/json: |
                {
                  "statusCode": 200
                }
            responses:
              default:
                statusCode: 200
                responseParameters:
                  method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
                  method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                  method.response.header.Access-Control-Allow-Origin: "'*'"

  /feelings/{feeling_id}:
    get:
      tags:
        - Feelings
      summary: List a single feeling record
      description: Get details of a feeling record
      parameters:
        - name: feeling_id
          in: path
          description: feeling_id of the feeling record to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feeling"
        "405":
          description: Invalid input
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:feeling-id-get/invocations
    put:
      x-amazon-apigateway-request-validator: body-only
      tags:
        - Feelings
      summary: Update a feeling record 
      description: Update a feeling record
      requestBody:
        description: Update a feeling record
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Feeling"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feeling"
        "405":
          description: Invalid input
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:feeling-id-put/invocations
    delete:
      tags:
        - Feelings
      summary: Delete a feeling record
      description: Delete a feeling record
      parameters:
        - name: feeling_id
          in: path
          description: feelingID of the poop record to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feeling"
        "405":
          description: Invalid input
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:feeling-id-delete/invocations
    options:
      summary: CORS support
      description: Enable CORS by returning the correct headers
      responses:
        "200":
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode": 200
            }
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
components:
  schemas:
    Feeling:
      type: object
      required:
        - feeling_score
        - stress_level
        - feeling_date
      properties:
        feeling_score:
          type: integer
          minimum: 1
          maximum: 10
          example: 6
        stress_level:
          type: integer
          minimum: 1
          maximum: 10
          example: 5
        feeling_date: 
          type: string
          example: 2025/03/24
    FeelingRecords:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Feeling"
    